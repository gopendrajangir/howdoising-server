{"version":3,"sources":["assets/img/home-auditorium.png","assets/img/home-discussion.png","assets/img/logo-full.png","components/Home/index.js","context/index.js","components/Signup/handleSignupSubmit.js","components/Signup/index.js","actions/auth.js","actions/types.js","containers/LoginForm/handleLoginSubmit.js","containers/LoginForm/index.js","components/Login/index.js","components/Loader/index.js","containers/LogoutUser/index.js","components/Logout/index.js","components/SetPassword/handleSetPasswordSubmit.js","components/SetPassword/index.js","components/ResetPassword/handleResetPasswordSubmit.js","components/ResetPassword/index.js","components/ForgotPassword/handleForgotPassword.js","components/ForgotPassword/index.js","components/SentMail/index.js","components/Auditorium/index.js","components/RateRecording/index.js","components/Profile/index.js","components/Record/AudioRecorder.js","containers/RecordingForm/index.js","components/Record/index.js","components/Navigation/NavItem.js","containers/NavNotifications/getUnreadNotifications.js","utils/formatTime.js","components/Navigation/Notification.js","containers/NavNotifications/readAllNotifications.js","containers/NavNotifications/NotificationsBox.js","containers/NavNotifications/index.js","components/Navigation/NavUser.js","components/Navigation/NavLoggedIn.js","components/Navigation/index.js","App.js","reducers/authReducer.js","reducers/index.js","index.js","assets/img/sprite.svg","assets/img/user.png","assets/img/logo.png"],"names":["module","exports","Home","className","to","src","Logo","alt","xlinkHref","Sprite","HomeAuditorium","HomeDiscussion","CurrentPathContext","React","createContext","UserContext","data","a","setErrors","setSubmitting","props","history","Axios","post","name","email","status","push","pathname","state","message","response","handleSubmit","FormikApp","withFormik","mapPropsToValues","handleSignupSubmit","validationSchema","Yup","shape","min","max","required","isSubmitting","Consumer","isLoggedIn","component","htmlFor","placeholder","id","type","disabled","withRouter","logInUser","user","payload","logIn","password","result","handleLoginSubmit","mapActionsToProps","connect","Login","Loader","customClass","logOut","useState","requestState","setRequestState","useEffect","Fragment","Logout","token","match","params","patch","passwordConfirm","console","log","handleSetPasswordSubmit","oneOf","handleResetPasswordSubmit","handleForgotSubmit","SentMail","location","Auditorium","recordings","fetchRecordings","get","map","el","recording","RateRecording","rating","RateResult","textComment","CommentResult","Profile","AudioRecorder","seconds","mediaRecorder","updateRecordState","updateStatus","timeRemainingIntervalId","updateTimeRemainingIntervalId","useReducer","action","stop","clearInterval","timeRemaining","updateTimeRemaining","setTimeRemainingInterval","setInterval","clearTimeRemainingInterval","onClick","pause","resume","start","AudioRef","createRef","title","description","chunks","blob","Blob","audioURL","window","URL","createObjectURL","current","ref","controls","Record","recordState","updateMediaRecorder","isRecorderSet","setRecorder","updateChunks","navigator","mediaDevices","getUserMedia","audio","then","stream","MediaRecorder","addEventListener","e","catch","err","NavItem","path","icon","text","togglerInputRef","inputRef","click","getUreadNotifications","formatTimeHelper","time","quantity","Notification","photo","notification","undefined","comment","question","UserImg","Date","getTime","minutes","hours","days","weeks","months","years","Math","floor","formatTime","createdAt","setLoadingState","readAllNotifications","loadingState","notifications","sort","b","key","isDescendant","descendant","parent","parentNode","isDescendantByClassName","notificationsBox","toggleNotificationsBox","socket","socketIOClient","emit","_id","on","getUnreadNotifications","body","document","querySelector","navBtn","target","unreadNotifications","NavUser","avatar","navUserMenu","toggleNavUserMenu","split","Navigation","Provider","value","LogoFull","NavLoggedIn","auth","exact","Signup","SetPassword","ResetPassword","ForgotPassword","INITIAL_STATE","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistedState","serializedState","localStorage","getItem","JSON","parse","loadFromLocalStorage","store","createStore","reducers","applyMiddleware","thunk","subscribe","stringify","setItem","saveToLocalStorage","getState","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.bebb2be5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/home-auditorium.9d442c1b.png\";","module.exports = __webpack_public_path__ + \"static/media/home-discussion.624f39c0.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-full.a0742aad.png\";","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport Sprite from 'assets/img/sprite.svg';\r\nimport HomeAuditorium from 'assets/img/home-auditorium.png';\r\nimport HomeDiscussion from 'assets/img/home-discussion.png';\r\nimport Logo from 'assets/img/logo.png';\r\n\r\nimport './home.scss';\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"home\">\r\n      <header className=\"home-header\">\r\n        <div className=\"home-header__left\">\r\n          <h1 className=\"home-header__heading-primary\">HOWDOISING</h1>\r\n          <h2 className=\"home-header__heading-secondary\">\r\n            SING, SHARE AND LEARN\r\n          </h2>\r\n          <Link className=\"home-cta home-cta--header\" to=\"#\">\r\n            Explore Auditorium\r\n          </Link>\r\n        </div>\r\n        <div className=\"home-header__right\">\r\n          <div className=\"home-header__logo-cover\">\r\n            <img className=\"home-header__logo-img\" src={Logo} alt=\"logo\" />\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <section className=\"home-section home-steps section-padding\">\r\n        <h1 className=\"section-heading\">SING, SHARE AND GET FEEDBACK</h1>\r\n        <div className=\"section-content home-steps__content\">\r\n          <div className=\"home-step\">\r\n            <svg className=\"home-step__icon\">\r\n              <use xlinkHref={`${Sprite}#icon-mic`} />\r\n            </svg>\r\n            <span className=\"home-step__title\">RECORD</span>\r\n          </div>\r\n          <div className=\"home-step\">\r\n            <svg className=\"home-step__icon\">\r\n              <use xlinkHref={`${Sprite}#icon-cloud-upload`} />\r\n            </svg>\r\n            <span className=\"home-step__title\">UPLOAD</span>\r\n          </div>\r\n          <div className=\"home-step\">\r\n            <svg className=\"home-step__icon\">\r\n              <use xlinkHref={`${Sprite}#icon-insert_comment`} />\r\n            </svg>\r\n            <span className=\"home-step__title\">FEEDBACK</span>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section className=\"home-auditorium section-padding\">\r\n        <h1 className=\"section-heading section-heading--light\">\r\n          THE AUDITORIUM\r\n        </h1>\r\n        <div className=\"section-content home-auditorium__content\">\r\n          <div className=\"home-auditorium__left\">\r\n            <p className=\"home-auditorium__text\">\r\n              Auditorium is the place where all the recordings uploaded by users\r\n              can be seen. You can rate them and also can comment on them and\r\n              give your valuable suggestion to the users to help them to improve\r\n              there singing and enhance their singing abilities.\r\n            </p>\r\n            <Link className=\"home-cta\" to=\"#\">\r\n              Explore Auditorium\r\n            </Link>\r\n          </div>\r\n          <div className=\"home-auditorium__right\">\r\n            <img\r\n              className=\"home-auditorium__img\"\r\n              src={HomeAuditorium}\r\n              alt=\"home auditorium\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section className=\"home-discussion section-padding\">\r\n        <h1 className=\"section-heading\">QnA</h1>\r\n        <div className=\"section-content home-discussion__content\">\r\n          <div className=\"home-discussion__left\">\r\n            <p className=\"home-discussion__text\">\r\n              QnA section help users to find answers to their doubts and\r\n              confusions. One can ask question either in Text message or Voice\r\n              message and anyone who wants to help can answer it in Text message\r\n              or Voice message.\r\n            </p>\r\n            <Link className=\"home-cta home-cta--dark\" to=\"#\">\r\n              QnA Section\r\n            </Link>\r\n          </div>\r\n          <div className=\"home-discussion__right\">\r\n            <img\r\n              className=\"home-discussion__img\"\r\n              src={HomeDiscussion}\r\n              alt=\"home discussion\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section className=\"home-record section-padding\">\r\n        <h1 className=\"section-heading section-heading--light\">\r\n          Recording Studio\r\n        </h1>\r\n        <div className=\"section-content home-record__content\">\r\n          <div className=\"home-record__left\">\r\n            <svg className=\"home-record__img\">\r\n              <use xlinkHref={`${Sprite}#icon-mic`} />\r\n            </svg>\r\n          </div>\r\n          <div className=\"home-record__right\">\r\n            <p className=\"home-record__text\">\r\n              You can record and upload audio of maximum 1:30 minute. You need\r\n              to allow browser to use microphone for recording. Once voice is\r\n              recorded you can give title and description to it and upload it.\r\n              You will receive notification when anyone will rate or comment on\r\n              your recording.\r\n            </p>\r\n            <Link className=\"home-cta\" to=\"#\">\r\n              QnA Section\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section className=\"home-auth section-padding\">\r\n        <h1 className=\"section-heading\">SIGNUP OR LOGIN</h1>\r\n        <div className=\"section-content home-auth__content\">\r\n          <Link\r\n            className=\"home-cta home-cta--primary home-auth__cta home-auth__cta--signup\"\r\n            to=\"#\">\r\n            SIGNUP\r\n          </Link>\r\n          <Link\r\n            className=\"home-cta home-auth__cta home-auth__cta--login\"\r\n            to=\"#\">\r\n            LOGIN\r\n          </Link>\r\n        </div>\r\n      </section>\r\n      <footer className=\"home-footer section-padding\">\r\n        <img className=\"home-footer__logo-img\" src={Logo} alt=\"logo\" />\r\n        <div className=\"section-content home-footer__content\">\r\n          <ul className=\"home-footer-nav__list\">\r\n            <li className=\"home-footer-nav__item\">\r\n              <Link className=\"home-footer-nav__link\" to=\"#\">\r\n                <svg className=\"home-footer-nav__icon\">\r\n                  <use xlinkHref={`${Sprite}#icon-home`} />\r\n                </svg>\r\n                <span className=\"home-footer-nav__text\">Home</span>\r\n              </Link>\r\n            </li>\r\n            <li className=\"home-footer-nav__item\">\r\n              <Link className=\"home-footer-nav__link\" to=\"#\">\r\n                <svg className=\"home-footer-nav__icon\">\r\n                  <use xlinkHref={`${Sprite}#icon-music`} />\r\n                </svg>\r\n                <span className=\"home-footer-nav__text\">Auditorium</span>\r\n              </Link>\r\n            </li>\r\n            <li className=\"home-footer-nav__item\">\r\n              <Link className=\"home-footer-nav__link\" to=\"#\">\r\n                <svg className=\"home-footer-nav__icon\">\r\n                  <use xlinkHref={`${Sprite}#icon-bubbles`} />\r\n                </svg>\r\n                <span className=\"home-footer-nav__text\">QnA</span>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <p className=\"home-footer__copyright\">\r\n          &copy; 2020 HowDoISing | All rights reserved.\r\n        </p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nexport const CurrentPathContext = React.createContext();\r\nexport const UserContext = React.createContext();\r\n","import Axios from 'axios';\r\n\r\nasync function handleSubmit(data, {setErrors, setSubmitting, props}) {\r\n  const {history} = props;\r\n  setSubmitting(true);\r\n  try {\r\n    const result = await Axios.post('/api/v1/users/signup', {\r\n      name: data.name,\r\n      email: data.email,\r\n    });\r\n    if (result.data.status === 'success') {\r\n      history.push({\r\n        pathname: '/sentMail',\r\n        state: {\r\n          message: `Email verification link sent successfully to ${data.email}`,\r\n        },\r\n      });\r\n    }\r\n  } catch (err) {\r\n    setErrors({\r\n      email: err.response.data.message,\r\n    });\r\n  }\r\n}\r\n\r\nexport default handleSubmit;\r\n","import React from 'react';\r\nimport * as Yup from 'yup';\r\nimport {withFormik, Form, Field, ErrorMessage} from 'formik';\r\nimport {withRouter, Redirect, Link} from 'react-router-dom';\r\n\r\nimport {UserContext} from 'context';\r\n\r\nimport handleSignupSubmit from './handleSignupSubmit';\r\n\r\nimport './signup.scss';\r\n\r\nfunction Signup({isSubmitting}) {\r\n  return (\r\n    <UserContext.Consumer>\r\n      {({isLoggedIn}) => {\r\n        if (isLoggedIn) return <Redirect to=\"/profile\" />;\r\n        return (\r\n          <div className=\"signup\">\r\n            <div className=\"signup-box\">\r\n              <Form className=\"signup-form\">\r\n                <div className=\"signup-form__field\">\r\n                  <ErrorMessage\r\n                    className=\"signup-form__error\"\r\n                    name=\"name\"\r\n                    component=\"div\"\r\n                  />\r\n                  <label className=\"signup-form__label\" htmlFor=\"name\">\r\n                    Name\r\n                  </label>\r\n                  <Field\r\n                    placeholder=\"Name\"\r\n                    className=\"signup-form__input\"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                  />\r\n                </div>\r\n                <div className=\"signup-form__field\">\r\n                  <ErrorMessage\r\n                    className=\"signup-form__error\"\r\n                    name=\"email\"\r\n                    component=\"div\"\r\n                  />\r\n                  <label className=\"signup-form__label\" htmlFor=\"email\">\r\n                    Email\r\n                  </label>\r\n                  <Field\r\n                    placeholder=\"Email\"\r\n                    className=\"signup-form__input\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                  />\r\n                </div>\r\n                <button\r\n                  className=\"signup-form__button\"\r\n                  type=\"submit\"\r\n                  disabled={isSubmitting}>\r\n                  Signup\r\n                </button>\r\n              </Form>\r\n              <p className=\"signup-note\">\r\n                Email confirmation link will be sent on the email address you\r\n                will provide then you can set password for your account.\r\n              </p>\r\n              <div className=\"signup-redirect\">\r\n                <p className=\"signup-redirect__login\">\r\n                  Already have an account?\r\n                  <Link className=\"signup-redirect__link\" to=\"/login\">\r\n                    Login\r\n                  </Link>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }}\r\n    </UserContext.Consumer>\r\n  );\r\n}\r\n\r\nconst FormikApp = withFormik({\r\n  mapPropsToValues() {\r\n    return {\r\n      name: '',\r\n      email: '',\r\n    };\r\n  },\r\n  handleSubmit: handleSignupSubmit,\r\n  validationSchema: Yup.object().shape({\r\n    name: Yup.string()\r\n      .min(5, 'Name must have atleast 5 characters')\r\n      .max(20, 'Name must have less than or equal to 20 characters')\r\n      .required('Name is required'),\r\n    email: Yup.string().email('Invalid Email').required('Email is required'),\r\n  }),\r\n})(Signup);\r\n\r\nexport default withRouter(FormikApp);\r\n","import { LOG_IN, LOG_OUT } from \"./types\";\r\n\r\nexport const logInUser = user => {\r\n  return {\r\n    type: LOG_IN,\r\n    payload: user\r\n  };\r\n};\r\n\r\nexport const logOutUser = () => {\r\n  return {\r\n    type: LOG_OUT\r\n  };\r\n};\r\n","export const LOG_IN = 'LOG_IN';\r\nexport const LOG_OUT = 'LOG_OUT';\r\n","import Axios from 'axios';\r\n\r\nasync function handleSubmit(data, {setErrors, setSubmitting, props}) {\r\n  const {logIn} = props;\r\n  setSubmitting(true);\r\n  try {\r\n    const result = await Axios.post(`/api/v1/users/login`, {\r\n      email: data.email,\r\n      password: data.password,\r\n    });\r\n    logIn(result.data.data.user);\r\n  } catch (err) {\r\n    setErrors({\r\n      email: err.response.data.message,\r\n    });\r\n  }\r\n}\r\n\r\nexport default handleSubmit;\r\n","import React from 'react';\r\nimport {withFormik, Form, Field, ErrorMessage} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {logInUser} from 'actions/auth';\r\n\r\nimport handleLoginSubmit from './handleLoginSubmit';\r\n\r\nfunction LoginForm({isSubmitting}) {\r\n  return (\r\n    <Form className=\"login-form\">\r\n      <div className=\"login-form__field\">\r\n        <ErrorMessage\r\n          className=\"login-form__error\"\r\n          name=\"email\"\r\n          component=\"div\"\r\n        />\r\n        <label className=\"login-form__label\" htmlFor=\"email\">\r\n          Email\r\n        </label>\r\n        <Field\r\n          placeholder=\"Email\"\r\n          className=\"login-form__input\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n        />\r\n      </div>\r\n      <div className=\"login-form__field\">\r\n        <ErrorMessage\r\n          className=\"login-form__error\"\r\n          name=\"password\"\r\n          component=\"div\"\r\n        />\r\n        <label className=\"login-form__label\" htmlFor=\"password\">\r\n          Password\r\n        </label>\r\n        <Field\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          className=\"login-form__input\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n        />\r\n      </div>\r\n      <button\r\n        className=\"login-form__button\"\r\n        type=\"submit\"\r\n        disabled={isSubmitting}>\r\n        Login\r\n      </button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nconst FormikApp = withFormik({\r\n  mapPropsToValues() {\r\n    return {\r\n      email: '',\r\n      password: '',\r\n    };\r\n  },\r\n  handleSubmit: handleLoginSubmit,\r\n  validationSchema: Yup.object().shape({\r\n    email: Yup.string().required('Email is required'),\r\n    password: Yup.string().required('Password is required'),\r\n  }),\r\n})(LoginForm);\r\n\r\nconst mapActionsToProps = {\r\n  logIn: logInUser,\r\n};\r\n\r\nexport default connect(null, mapActionsToProps)(FormikApp);\r\n","import React from 'react';\r\nimport {Redirect, Link} from 'react-router-dom';\r\n\r\nimport LoginForm from 'containers/LoginForm';\r\n\r\nimport './login.scss';\r\n\r\nimport {UserContext} from 'context';\r\n\r\nfunction Login() {\r\n  return (\r\n    <UserContext.Consumer>\r\n      {({isLoggedIn}) => {\r\n        if (isLoggedIn) return <Redirect to=\"/profile\" />;\r\n        return (\r\n          <div className=\"login\">\r\n            <div className=\"login-box\">\r\n              <LoginForm />\r\n              <div className=\"login-redirect\">\r\n                <p className=\"login-redirect__signup\">\r\n                  Don't have an account?\r\n                  <Link className=\"login-redirect__link\" to=\"/signup\">\r\n                    Signup\r\n                  </Link>\r\n                </p>\r\n                <p className=\"login-redirect__forgot-password\">\r\n                  <Link className=\"login-redirect__link\" to=\"/forgotPassword\">\r\n                    Forgot Password\r\n                  </Link>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }}\r\n    </UserContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\n\r\nimport './loader.scss';\r\n\r\nfunction Loader({customClass}) {\r\n  return <div className={`loader ${customClass}`}></div>;\r\n}\r\n\r\nexport default Loader;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {logOutUser} from 'actions/auth';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nimport Loader from 'components/Loader';\r\n\r\nfunction LogoutUser({logOut, history}) {\r\n  const [requestState, setRequestState] = useState('loading');\r\n  useEffect(() => {\r\n    logOut(logOut, setRequestState, history);\r\n  }, [setRequestState, history, logOut]);\r\n  return (\r\n    <React.Fragment>\r\n      {requestState === 'loading' ? (\r\n        <React.Fragment>\r\n          <Loader />\r\n          <h1 className=\"logout-state\">Logging out</h1>\r\n        </React.Fragment>\r\n      ) : requestState === 'error' ? (\r\n        <h1 className=\"logout-state\">Error Logging Out</h1>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst mapActionsToProps = {\r\n  logOut: logOutUser,\r\n};\r\n\r\nexport default withRouter(connect(null, mapActionsToProps)(LogoutUser));\r\n","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport {UserContext} from 'context';\r\n\r\nimport './logout.scss';\r\n\r\nimport LogoutUser from 'containers/LogoutUser';\r\n\r\nfunction Logout() {\r\n  return (\r\n    <UserContext.Consumer>\r\n      {({isLoggedIn}) => {\r\n        if (!isLoggedIn) return <Redirect to=\"/login\" />;\r\n        return (\r\n          <div className=\"logout\">\r\n            <LogoutUser />\r\n          </div>\r\n        );\r\n      }}\r\n    </UserContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default Logout;\r\n","import Axios from 'axios';\r\n\r\nasync function handleSubmit(data, {setErrors, setSubmitting, props}) {\r\n  const {token} = props.match.params;\r\n  setSubmitting(true);\r\n  try {\r\n    const result = await Axios.patch(`/api/v1/users/verify/${token}`, {\r\n      password: data.password,\r\n      passwordConfirm: data.passwordConfirm,\r\n    });\r\n    console.log(result);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport default handleSubmit;\r\n","import React from 'react';\r\nimport {withFormik, Form, Field, ErrorMessage} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport handleSetPasswordSubmit from './handleSetPasswordSubmit';\r\n\r\nimport './setPassword.scss';\r\n\r\nimport {UserContext} from 'context';\r\n\r\nfunction SetPassword({isSubmitting}) {\r\n  return (\r\n    <UserContext.Consumer>\r\n      {({isLoggedIn}) => {\r\n        if (isLoggedIn) return <Redirect to=\"/profile\" />;\r\n        return (\r\n          <div className=\"set-password\">\r\n            <div className=\"set-password-box\">\r\n              <Form className=\"set-password-form\">\r\n                <div className=\"set-password-form__field\">\r\n                  <ErrorMessage\r\n                    className=\"set-password-form__error\"\r\n                    name=\"password\"\r\n                    component=\"div\"\r\n                  />\r\n                  <label\r\n                    className=\"set-password-form__label\"\r\n                    htmlFor=\"password\">\r\n                    Password\r\n                  </label>\r\n                  <Field\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    className=\"set-password-form__input\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                  />\r\n                </div>\r\n                <div className=\"set-password-form__field\">\r\n                  <ErrorMessage\r\n                    className=\"set-password-form__error\"\r\n                    name=\"passwordConfirm\"\r\n                    component=\"div\"\r\n                  />\r\n                  <label\r\n                    className=\"set-password-form__label\"\r\n                    htmlFor=\"passwordConfirm\">\r\n                    Confirm Password\r\n                  </label>\r\n                  <Field\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm Password\"\r\n                    className=\"set-password-form__input\"\r\n                    id=\"passwordConfirm\"\r\n                    name=\"passwordConfirm\"\r\n                  />\r\n                </div>\r\n                <button\r\n                  className=\"set-password-form__button\"\r\n                  type=\"submit\"\r\n                  disabled={isSubmitting}>\r\n                  Set Password\r\n                </button>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        );\r\n      }}\r\n    </UserContext.Consumer>\r\n  );\r\n}\r\n\r\nconst FormikApp = withFormik({\r\n  mapPropsToValues() {\r\n    return {\r\n      password: '',\r\n      passwordConfirm: '',\r\n    };\r\n  },\r\n  handleSubmit: handleSetPasswordSubmit,\r\n  validationSchema: Yup.object().shape({\r\n    password: Yup.string()\r\n      .min(8, 'Password must have atleast 8 characters')\r\n      .required('Password is required'),\r\n    passwordConfirm: Yup.string().oneOf(\r\n      [Yup.ref('password'), null],\r\n      'Passwords must match',\r\n    ),\r\n  }),\r\n})(SetPassword);\r\n\r\nexport default FormikApp;\r\n","import Axios from 'axios';\r\n\r\nasync function handleSubmit(data, {setErrors, setSubmitting, props}) {\r\n  const {token} = props.match.params;\r\n  const {history} = props;\r\n  setSubmitting(true);\r\n  try {\r\n    const result = await Axios.patch(`/api/v1/users/resetPassword/${token}`, {\r\n      password: data.password,\r\n      passwordConfirm: data.passwordConfirm,\r\n    });\r\n    if (result.data.status === 'success') {\r\n      history.push('/login');\r\n    }\r\n  } catch (err) {\r\n    setErrors({\r\n      password: err.response.data.message,\r\n    });\r\n  }\r\n}\r\n\r\nexport default handleSubmit;\r\n","import React from 'react';\r\nimport {withFormik, Form, Field, ErrorMessage} from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nimport handleResetPasswordSubmit from './handleResetPasswordSubmit';\r\n\r\nimport './resetPassword.scss';\r\n\r\nfunction ResetPassword({isSubmitting}) {\r\n  return (\r\n    <div className=\"reset-password\">\r\n      <div className=\"reset-password-box\">\r\n        <Form className=\"reset-password-form\">\r\n          <div className=\"reset-password-form__field\">\r\n            <ErrorMessage\r\n              className=\"reset-password-form__error\"\r\n              name=\"password\"\r\n              component=\"div\"\r\n            />\r\n            <label className=\"reset-password-form__label\" htmlFor=\"password\">\r\n              Password\r\n            </label>\r\n            <Field\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              className=\"reset-password-form__input\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n            />\r\n          </div>\r\n          <div className=\"reset-password-form__field\">\r\n            <ErrorMessage\r\n              className=\"reset-password-form__error\"\r\n              name=\"passwordConfirm\"\r\n              component=\"div\"\r\n            />\r\n            <label\r\n              className=\"reset-password-form__label\"\r\n              htmlFor=\"passwordConfirm\">\r\n              Confirm Password\r\n            </label>\r\n            <Field\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              className=\"reset-password-form__input\"\r\n              id=\"passwordConfirm\"\r\n              name=\"passwordConfirm\"\r\n            />\r\n          </div>\r\n          <button\r\n            className=\"reset-password-form__button\"\r\n            type=\"submit\"\r\n            disabled={isSubmitting}>\r\n            Reset Password\r\n          </button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst FormikApp = withFormik({\r\n  mapPropsToValues() {\r\n    return {\r\n      password: '',\r\n      passwordConfirm: '',\r\n    };\r\n  },\r\n  handleSubmit: handleResetPasswordSubmit,\r\n  validationSchema: Yup.object().shape({\r\n    password: Yup.string()\r\n      .min(8, 'Password must have atleast 8 characters')\r\n      .required('Password is required'),\r\n    passwordConfirm: Yup.string().oneOf(\r\n      [Yup.ref('password'), null],\r\n      'Passwords must match',\r\n    ),\r\n  }),\r\n})(ResetPassword);\r\n\r\nexport default withRouter(FormikApp);\r\n","import Axios from 'axios';\r\n\r\nasync function handleSubmit(data, {setErrors, setSubmitting, props}) {\r\n  const {history} = props;\r\n  setSubmitting(true);\r\n  try {\r\n    const result = await Axios.post('/api/v1/users/forgotPassword', {\r\n      email: data.email,\r\n    });\r\n    console.log(result);\r\n    if (result.data.status === 'success') {\r\n      history.push({\r\n        pathname: '/sentMail',\r\n        state: {\r\n          message: `Reset password link sent successfully to ${data.email}`,\r\n        },\r\n      });\r\n    }\r\n  } catch (err) {\r\n    setErrors({\r\n      email: err.response.data.message,\r\n    });\r\n  }\r\n}\r\n\r\nexport default handleSubmit;\r\n","import React from 'react';\r\nimport * as Yup from 'yup';\r\nimport {withFormik, Form, Field, ErrorMessage} from 'formik';\r\nimport {withRouter, Redirect} from 'react-router-dom';\r\n\r\nimport {UserContext} from 'context';\r\n\r\nimport handleForgotSubmit from './handleForgotPassword';\r\n\r\nimport './forgotPassword.scss';\r\n\r\nfunction ForgotPassword({isSubmitting}) {\r\n  return (\r\n    <UserContext.Consumer>\r\n      {({isLoggedIn}) => {\r\n        if (isLoggedIn) return <Redirect to=\"/profile\" />;\r\n        return (\r\n          <div className=\"forgot-password\">\r\n            <div className=\"forgot-password-box\">\r\n              <Form className=\"forgot-password-form\">\r\n                <div className=\"forgot-password-form__field\">\r\n                  <ErrorMessage\r\n                    className=\"forgot-password-form__error\"\r\n                    name=\"email\"\r\n                    component=\"div\"\r\n                  />\r\n                  <label\r\n                    className=\"forgot-password-form__label\"\r\n                    htmlFor=\"email\">\r\n                    Email\r\n                  </label>\r\n                  <Field\r\n                    placeholder=\"Email\"\r\n                    className=\"forgot-password-form__input\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                  />\r\n                </div>\r\n                <button\r\n                  className=\"forgot-password-form__button\"\r\n                  type=\"submit\"\r\n                  disabled={isSubmitting}>\r\n                  Forgot Password\r\n                </button>\r\n              </Form>\r\n              <p className=\"forgot-password-note\">\r\n                Email you provide should already be registered. Reset password\r\n                link will be sent to that email address.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        );\r\n      }}\r\n    </UserContext.Consumer>\r\n  );\r\n}\r\n\r\nconst FormikApp = withFormik({\r\n  mapPropsToValues() {\r\n    return {\r\n      email: '',\r\n    };\r\n  },\r\n  handleSubmit: handleForgotSubmit,\r\n  validationSchema: Yup.object().shape({\r\n    email: Yup.string().email('Invalid Email').required('Email is required'),\r\n  }),\r\n})(ForgotPassword);\r\n\r\nexport default withRouter(FormikApp);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport './sentMail.scss';\r\n\r\nfunction SentMail({history}) {\r\n  if (!history.location.state) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  const {message} = history.location.state;\r\n  if (!message) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <div className=\"sentmail\">\r\n      <div className=\"sentmail-box\">\r\n        <p className=\"sentmail-message\">{message}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nSentMail.propTypes = {\r\n  history: PropTypes.object,\r\n};\r\n\r\nexport default SentMail;\r\n","import React, {useState, useEffect} from 'react';\r\nimport Axios from 'axios';\r\n\r\nfunction Auditorium() {\r\n  const [recordings, fetchRecordings] = useState([]);\r\n  useEffect(() => {\r\n    (async function () {\r\n      try {\r\n        const result = await Axios.get('/api/v1/recordings');\r\n        if (result.data.status === 'success') {\r\n          fetchRecordings([...recordings, ...result.data.data.recordings]);\r\n        }\r\n      } catch (err) {\r\n        console.log(err.response.data.message);\r\n      }\r\n    })();\r\n  }, [fetchRecordings, recordings]);\r\n  return (\r\n    <div>\r\n      {recordings.map((el) => {\r\n        console.log(el);\r\n        return <audio src={`/api/v1/recordings/${el.recording}`} />;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Auditorium;\r\n","import React, {useEffect} from 'react';\r\nimport Axios from 'axios';\r\n\r\nfunction RateRecording(props) {\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const RateResult = await Axios.post(\r\n          `/api/v1/recordings/5ea04fbdf2a17a2b4cca61c8/ratings`,\r\n          {\r\n            rating: 13,\r\n          },\r\n        );\r\n        const CommentResult = await Axios.post(\r\n          `/api/v1/recordings/5ea04fbdf2a17a2b4cca61c8/comments`,\r\n          {\r\n            textComment: 'Nice',\r\n          },\r\n        );\r\n        console.log(RateResult, CommentResult);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    })();\r\n  });\r\n  return (\r\n    <div>\r\n      <h1>Rating Recording</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RateRecording;\r\n","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport {UserContext} from 'context';\r\n\r\nimport './profile.scss';\r\n\r\nfunction Profile() {\r\n  return (\r\n    <UserContext.Consumer>\r\n      {({isLoggedIn}) => {\r\n        if (!isLoggedIn) return <Redirect to=\"/profile\" />;\r\n        return (\r\n          <div className=\"profile\">\r\n            <h1>Profile</h1>\r\n          </div>\r\n        );\r\n      }}\r\n    </UserContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React, {useState, useReducer} from 'react';\r\n\r\nimport Sprite from 'assets/img/sprite.svg';\r\n\r\nfunction secondsToMinute(seconds) {\r\n  if (seconds === 60) {\r\n    return '01:00';\r\n  } else if (seconds < 60) {\r\n    if (seconds >= 10) {\r\n      return `00:${seconds}`;\r\n    } else {\r\n      return `00:0${seconds}`;\r\n    }\r\n  }\r\n}\r\n\r\nfunction AudioRecorder({mediaRecorder, updateRecordState}) {\r\n  const [status, updateStatus] = useState(false);\r\n  const [timeRemainingIntervalId, updateTimeRemainingIntervalId] = useState();\r\n  const [timeRemaining, updateTimeRemaining] = useReducer(\r\n    (state = 60, action) => {\r\n      if (state - 1 === 0) {\r\n        mediaRecorder.stop();\r\n        clearInterval(timeRemainingIntervalId);\r\n      }\r\n      if (action.type === 'decrease') return state - 1;\r\n      return state;\r\n    },\r\n    60,\r\n  );\r\n\r\n  function setTimeRemainingInterval() {\r\n    const id = setInterval(() => {\r\n      updateTimeRemaining({type: 'decrease'});\r\n    }, 1000);\r\n    updateTimeRemainingIntervalId(id);\r\n  }\r\n\r\n  function clearTimeRemainingInterval() {\r\n    clearInterval(timeRemainingIntervalId);\r\n  }\r\n\r\n  return (\r\n    <div className=\"audio-recorder\">\r\n      <div className=\"audio-recorder__duration\">\r\n        {secondsToMinute(timeRemaining)}\r\n      </div>\r\n      <div className=\"audio-recorder__controls\">\r\n        {status === 'recording' ? (\r\n          <React.Fragment>\r\n            <button\r\n              className=\"audio-recorder__btn\"\r\n              onClick={() => {\r\n                mediaRecorder.pause();\r\n                updateStatus('paused');\r\n                clearTimeRemainingInterval();\r\n              }}>\r\n              <svg className=\"audio-recorder__icon\">\r\n                <use xlinkHref={`${Sprite}#icon-pause2`} />\r\n              </svg>\r\n            </button>\r\n            <button\r\n              className=\"audio-recorder__btn audio-recorder__btn--stop\"\r\n              onClick={() => {\r\n                mediaRecorder.stop();\r\n                clearTimeRemainingInterval();\r\n              }}>\r\n              <svg className=\"audio-recorder__icon\">\r\n                <use xlinkHref={`${Sprite}#icon-stop2`} />\r\n              </svg>\r\n            </button>\r\n          </React.Fragment>\r\n        ) : status === 'paused' ? (\r\n          <React.Fragment>\r\n            <button\r\n              className=\"audio-recorder__btn\"\r\n              onClick={() => {\r\n                mediaRecorder.resume();\r\n                updateStatus('recording');\r\n                setTimeRemainingInterval();\r\n              }}>\r\n              <svg className=\"audio-recorder__icon audio-recorder__icon--mic\">\r\n                <use xlinkHref={`${Sprite}#icon-mic`} />\r\n              </svg>\r\n            </button>\r\n            <button\r\n              className=\"audio-recorder__btn audio-recorder__btn--stop\"\r\n              onClick={() => {\r\n                mediaRecorder.stop();\r\n                clearTimeRemainingInterval();\r\n              }}>\r\n              <svg className=\"audio-recorder__icon\">\r\n                <use xlinkHref={`${Sprite}#icon-stop2`} />\r\n              </svg>\r\n            </button>\r\n          </React.Fragment>\r\n        ) : (\r\n          <button\r\n            className=\"audio-recorder__btn\"\r\n            onClick={() => {\r\n              mediaRecorder.start();\r\n              updateStatus('recording');\r\n              setTimeRemainingInterval();\r\n            }}>\r\n            <svg className=\"audio-recorder__icon audio-recorder__icon--mic\">\r\n              <use xlinkHref={`${Sprite}#icon-mic`} />\r\n            </svg>\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AudioRecorder;\r\n","import React, {useEffect} from 'react';\r\nimport {withFormik, Form, Field, ErrorMessage} from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport './recordingForm.scss';\r\n\r\nconst AudioRef = React.createRef();\r\n\r\nfunction RecordingForm({isSubmitting, chunks, updateRecordState}) {\r\n  useEffect(() => {\r\n    const blob = new Blob(chunks, {type: 'audio/webm; codecs=opus'});\r\n    const audioURL = window.URL.createObjectURL(blob);\r\n    AudioRef.current.src = audioURL;\r\n  }, [chunks]);\r\n\r\n  return (\r\n    <div className=\"recording-form-container\">\r\n      <div className=\"recording-form-wrapper\">\r\n        <audio className=\"recording-form-recording\" ref={AudioRef} controls />\r\n        <Form className=\"recording-form\">\r\n          <div className=\"recording-form__field\">\r\n            <ErrorMessage\r\n              className=\"recording-form__error\"\r\n              name=\"title\"\r\n              component=\"div\"\r\n            />\r\n            <label className=\"recording-form__label\" htmlFor=\"title\">\r\n              Title\r\n            </label>\r\n            <Field\r\n              placeholder=\"Title\"\r\n              className=\"recording-form__input\"\r\n              id=\"title\"\r\n              name=\"title\"\r\n            />\r\n          </div>\r\n          <div className=\"recording-form__field\">\r\n            <ErrorMessage\r\n              className=\"recording-form__error\"\r\n              name=\"description\"\r\n              component=\"div\"\r\n            />\r\n            <label className=\"recording-form__label\" htmlFor=\"description\">\r\n              Description\r\n            </label>\r\n            <Field\r\n              component=\"textarea\"\r\n              placeholder=\"Description\"\r\n              className=\"recording-form__textarea\"\r\n              id=\"description\"\r\n              name=\"description\"\r\n            />\r\n          </div>\r\n          <button\r\n            className=\"recording-form__button\"\r\n            type=\"submit\"\r\n            disabled={isSubmitting}>\r\n            Save\r\n          </button>\r\n          <button\r\n            className=\"recording-form__button\"\r\n            type=\"button\"\r\n            onClick={() => {\r\n              updateRecordState('recorder');\r\n            }}\r\n            disabled={isSubmitting}>\r\n            Cancel\r\n          </button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst FormikApp = withFormik({\r\n  mapPropsToValues() {\r\n    return {\r\n      email: '',\r\n      password: '',\r\n    };\r\n  },\r\n  handleSubmit: () => {},\r\n  validationSchema: Yup.object().shape({\r\n    title: Yup.string()\r\n      .required('Title is required')\r\n      .min(10, 'Title must have more than or equal to 10 characters')\r\n      .max(40, 'Title must have less than or equal to 40 characters'),\r\n    description: Yup.string()\r\n      .required('Description is required')\r\n      .max(500, 'Description must have less than or equal to 500 characters'),\r\n  }),\r\n})(RecordingForm);\r\n\r\nexport default FormikApp;\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nimport './record.scss';\r\n\r\nimport Loader from 'components/Loader';\r\nimport AudioRecorder from './AudioRecorder';\r\n\r\nimport RecordingForm from 'containers/RecordingForm';\r\n\r\nfunction Record(props) {\r\n  const [recordState, updateRecordState] = useState(false);\r\n  const [mediaRecorder, updateMediaRecorder] = useState();\r\n  const [isRecorderSet, setRecorder] = useState(false);\r\n  const [chunks, updateChunks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (!mediaRecorder && !isRecorderSet) {\r\n      if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n        console.log('getUserMedia supported.');\r\n        navigator.mediaDevices\r\n          .getUserMedia({\r\n            audio: true,\r\n          })\r\n          .then((stream) => {\r\n            const mediaRecorder = new MediaRecorder(stream);\r\n            mediaRecorder.addEventListener('dataavailable', (e) => {\r\n              updateChunks([...chunks, e.data]);\r\n            });\r\n            mediaRecorder.addEventListener('stop', (e) => {\r\n              updateRecordState('form');\r\n            });\r\n            updateMediaRecorder(mediaRecorder);\r\n            updateRecordState('recorder');\r\n            setRecorder(true);\r\n          })\r\n          .catch((err) => {\r\n            console.log('The following getUserMedia error occured: ' + err);\r\n          });\r\n      } else {\r\n        console.log('getUserMedia not supported on your browser!');\r\n      }\r\n    }\r\n  }, [chunks, isRecorderSet, mediaRecorder]);\r\n\r\n  return (\r\n    <div className=\"record\">\r\n      {recordState === 'recorder' && mediaRecorder ? (\r\n        <AudioRecorder\r\n          updateRecordState={updateRecordState}\r\n          mediaRecorder={mediaRecorder}\r\n        />\r\n      ) : recordState === 'form' ? (\r\n        <RecordingForm chunks={chunks} updateRecordState={updateRecordState} />\r\n      ) : (\r\n        <Loader customClass=\"record-loader\" />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Record;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport Sprite from 'assets/img/sprite.svg';\r\n\r\nimport {CurrentPathContext} from 'context';\r\n\r\nfunction NavItem({path, icon, text, inputRef}) {\r\n  const togglerInputRef = inputRef;\r\n  return (\r\n    <CurrentPathContext.Consumer>\r\n      {(pathname) => {\r\n        return (\r\n          <li className=\"nav__item\">\r\n            <Link\r\n              onClick={() => {\r\n                togglerInputRef.current.click();\r\n              }}\r\n              className={`nav__link ${\r\n                pathname === path ? 'nav__link--selected' : ''\r\n              }`}\r\n              to={`${path}`}>\r\n              <svg className=\"nav__icon\">\r\n                <use xlinkHref={`${Sprite}#icon-${icon}`} />\r\n              </svg>\r\n              <span className=\"nav__text\">{text}</span>\r\n            </Link>\r\n          </li>\r\n        );\r\n      }}\r\n    </CurrentPathContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default NavItem;\r\n","import Axios from 'axios';\r\n\r\nasync function getUreadNotifications(logIn) {\r\n  try {\r\n    const result = await Axios.get('/api/v1/users/notifications/unread');\r\n    if (result.data.status === 'success') {\r\n      logIn(result.data.data.user);\r\n    }\r\n  } catch (err) {\r\n    console.log(err.response.data.message);\r\n  }\r\n}\r\n\r\nexport default getUreadNotifications;\r\n","function formatTimeHelper(time, quantity) {\r\n  if (time < 2) return quantity;\r\n  return quantity + 's';\r\n}\r\n\r\nexport default (time) => {\r\n  const currentTime = new Date().getTime();\r\n  const milli = currentTime - time;\r\n  const seconds = milli / 1000;\r\n  const minutes = seconds / 60;\r\n  const hours = minutes / 60;\r\n  const days = hours / 24;\r\n  const weeks = days / 7;\r\n  const months = days / 30;\r\n  const years = months / 12;\r\n\r\n  if (seconds < 60) {\r\n    return 'Just Now';\r\n  } else if (minutes < 60) {\r\n    return `${Math.floor(minutes)} ${formatTimeHelper(minutes, 'minute')} ago`;\r\n  } else if (hours < 24) {\r\n    return `${Math.floor(hours)} ${formatTimeHelper(hours, 'hour')} ago`;\r\n  } else if (days < 7) {\r\n    return `${Math.floor(days)} ${formatTimeHelper(days, 'day')} ago`;\r\n  } else if (weeks < 4) {\r\n    return `${Math.floor(weeks)}  ${formatTimeHelper(weeks, 'week')} ago`;\r\n  } else if (months < 12) {\r\n    return `${Math.floor(months)} ${formatTimeHelper(months, 'month')} ago`;\r\n  } else {\r\n    return `${Math.floor(years)} ${formatTimeHelper(years, 'year')} ago`;\r\n  }\r\n};\r\n","import React from 'react';\r\n\r\nimport UserImg from 'assets/img/user.png';\r\n\r\nimport formatTime from 'utils/formatTime';\r\n\r\nfunction Notification({notification, type}) {\r\n  let message;\r\n  let photo;\r\n  if (type === 'rating') {\r\n    message = (\r\n      <p className=\"notification__message\">\r\n        <span className=\"notification__username\">\r\n          {notification.rating.user.name}\r\n        </span>{' '}\r\n        rated on your post{' '}\r\n        <span className=\"notification__title\">\r\n          {notification.rating.recording.title}\r\n        </span>\r\n      </p>\r\n    );\r\n    photo = notification.rating.user.photo\r\n      ? `/api/v1/static/images/${notification.rating.user.photo}`\r\n      : undefined;\r\n  } else if (type === 'comment') {\r\n    message = (\r\n      <p className=\"notification__message\">\r\n        <span className=\"notification__username\">\r\n          {notification.comment.user.name}{' '}\r\n        </span>\r\n        commented on your post{' '}\r\n        <span className=\"notification__title\">\r\n          {notification.comment.recording.title}\r\n        </span>\r\n      </p>\r\n    );\r\n    photo = notification.comment.user.photo\r\n      ? `/api/v1/static/images/${notification.comment.user.photo}`\r\n      : undefined;\r\n  } else if (type === 'question') {\r\n    message = (\r\n      <p className=\"notification__message\">\r\n        <span className=\"notification__username\">\r\n          {notification.question.user.name}\r\n        </span>{' '}\r\n        answered your question{' '}\r\n        <span className=\"notification__title\">\r\n          {notification.question.recording.title}\r\n        </span>\r\n      </p>\r\n    );\r\n    photo = notification.question.user.photo\r\n      ? `/api/v1/static/images/${notification.question.user.photo}`\r\n      : undefined;\r\n  }\r\n  return (\r\n    <div className=\"notification\">\r\n      <img\r\n        className=\"notification__user-img\"\r\n        src={photo ? photo : UserImg}\r\n        alt=\"user\"\r\n      />\r\n      {message}\r\n      <span className=\"notification__time\">\r\n        {formatTime(new Date(notification.createdAt).getTime())}\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notification;\r\n","import Axios from 'axios';\r\n\r\nasync function readAllNotifications(logIn, setLoadingState) {\r\n  try {\r\n    setLoadingState('loading');\r\n    const result = await Axios.get(\r\n      '/api/v1/users/notifications/readAllNotifications',\r\n    );\r\n    if (result.data.status === 'success') {\r\n      setLoadingState('success');\r\n      logIn(result.data.data.user);\r\n    }\r\n  } catch (err) {\r\n    setLoadingState('error');\r\n    console.log(err.response.data.message);\r\n  }\r\n}\r\n\r\nexport default readAllNotifications;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {logInUser} from 'actions/auth';\r\n\r\nimport Notification from 'components/Navigation/Notification';\r\nimport Loader from 'components/Loader';\r\n\r\nimport readAllNotifications from './readAllNotifications';\r\n\r\nfunction NotificationsBox({user, logIn}) {\r\n  const [loadingState, setLoadingState] = useState('loading');\r\n  useEffect(() => {\r\n    readAllNotifications(logIn, setLoadingState);\r\n  }, [logIn, setLoadingState]);\r\n  return (\r\n    <div className=\"notifications-box\">\r\n      <h1 className=\"notifications-box__heading\">Notifications</h1>\r\n      {loadingState === 'loading' ? (\r\n        <div className=\"nav-notifications-loader-wrapper\">\r\n          <Loader customClass=\"nav-notifications-loader\" />\r\n        </div>\r\n      ) : loadingState === 'success' ? (\r\n        <ul className=\"notifications-box__list\">\r\n          {user.notifications\r\n            .sort(\r\n              (a, b) =>\r\n                new Date(b.createdAt).getTime() -\r\n                new Date(a.createdAt).getTime(),\r\n            )\r\n            .map((notification) => {\r\n              return (\r\n                <li\r\n                  key={notification.createdAt}\r\n                  className=\"notifications-box__item\">\r\n                  <Link className=\"notifications-box__link\" to=\"/notifications\">\r\n                    {notification.rating ? (\r\n                      <Notification notification={notification} type=\"rating\" />\r\n                    ) : notification.comment ? (\r\n                      <Notification\r\n                        notification={notification}\r\n                        type=\"comment\"\r\n                      />\r\n                    ) : notification.question ? (\r\n                      <Notification\r\n                        notification={notification}\r\n                        type=\"question\"\r\n                      />\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </Link>\r\n                </li>\r\n              );\r\n            })}\r\n        </ul>\r\n      ) : loadingState === 'error' ? (\r\n        <div className=\"notifications-box__error-wrapper\">\r\n          <h1 className=\"notifications-box__error\">Error Occured</h1>\r\n        </div>\r\n      ) : (\r\n        ''\r\n      )}\r\n      <Link className=\"notifications-box__bottom-link\" to=\"/notifications\">\r\n        Show All\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapActionsToProps = {\r\n  logIn: logInUser,\r\n};\r\n\r\nexport default connect(null, mapActionsToProps)(NotificationsBox);\r\n","import React, {useState, useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport socketIOClient from 'socket.io-client';\r\n\r\nimport {logInUser} from 'actions/auth';\r\n\r\nimport getUnreadNotifications from './getUnreadNotifications';\r\n\r\nimport Sprite from 'assets/img/sprite.svg';\r\n\r\nimport NotificationsBox from 'containers/NavNotifications/NotificationsBox';\r\n\r\nfunction isDescendant(descendant, parent) {\r\n  let el = descendant;\r\n  while ((el = el.parentNode)) {\r\n    if (el === parent) {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nfunction isDescendantByClassName(descendant, className) {\r\n  let el = descendant;\r\n  while ((el = el.parentNode)) {\r\n    if (el.className === className) {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nfunction NavNotifications({user, logIn}) {\r\n  const [notificationsBox, toggleNotificationsBox] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const socket = socketIOClient('http://localhost:8000');\r\n\r\n    socket.emit('join', {id: user._id});\r\n\r\n    socket.on('notification', () => {\r\n      getUnreadNotifications(logIn);\r\n    });\r\n\r\n    const body = document.querySelector('body');\r\n    const navBtn = document.querySelector(\r\n      '.nav__btn-pseudo.nav__btn-pseudo--bell',\r\n    );\r\n\r\n    body.addEventListener('click', (e) => {\r\n      const notificationsBox = document.querySelector('.notifications-box');\r\n      if (\r\n        (e.target !== navBtn &&\r\n          !isDescendant(e.target, navBtn) &&\r\n          e.target !== notificationsBox &&\r\n          !isDescendant(e.target, notificationsBox)) ||\r\n        e.target.className === 'notifications-box__link' ||\r\n        isDescendantByClassName(e.target, 'notifications-box__link') ||\r\n        e.target.className === 'notifications-box__bottom-link' ||\r\n        isDescendantByClassName(e.target, 'notifications-box__bottom-link')\r\n      ) {\r\n        toggleNotificationsBox(false);\r\n      }\r\n    });\r\n  }, [user, logIn]);\r\n\r\n  return (\r\n    <div className=\"nav-notifications\">\r\n      <button\r\n        className=\"nav__btn-pseudo nav__btn-pseudo--bell\"\r\n        onClick={() => toggleNotificationsBox(!notificationsBox)}>\r\n        {user.unreadNotifications ? (\r\n          <span className=\"nav-notifications-count\">\r\n            {user.unreadNotifications > 9 ? '9+' : user.unreadNotifications}\r\n          </span>\r\n        ) : (\r\n          ''\r\n        )}\r\n        <svg className=\"nav__icon nav__icon--bell\">\r\n          <use xlinkHref={`${Sprite}#icon-bell`} />\r\n        </svg>\r\n      </button>\r\n      {notificationsBox ? <NotificationsBox user={user} /> : ''}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapActionsToProps = {\r\n  logIn: logInUser,\r\n};\r\n\r\nexport default connect(null, mapActionsToProps)(NavNotifications);\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport Sprite from 'assets/img/sprite.svg';\r\nimport UserImg from 'assets/img/user.png';\r\n\r\nfunction isDescendant(descendant, parent) {\r\n  let el = descendant;\r\n  while ((el = el.parentNode)) {\r\n    if (el === parent) {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nfunction isDescendantByClassName(descendant, className) {\r\n  let el = descendant;\r\n  while ((el = el.parentNode)) {\r\n    if (el.className === className) {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nfunction NavUser({user}) {\r\n  let avatar = user.photo ? `/api/v1/static/images/${user.photo}` : UserImg;\r\n\r\n  const [navUserMenu, toggleNavUserMenu] = useState(false);\r\n  useEffect(() => {\r\n    const body = document.querySelector('body');\r\n    const navBtn = document.querySelector(\r\n      '.nav__btn-pseudo.nav__btn-pseudo--user',\r\n    );\r\n    body.addEventListener('click', (e) => {\r\n      const navUserMenu = document.querySelector('.nav-user-menu');\r\n      if (\r\n        (e.target !== navBtn &&\r\n          !isDescendant(e.target, navBtn) &&\r\n          e.target !== navUserMenu &&\r\n          !isDescendant(e.target, navUserMenu)) ||\r\n        e.target.className === 'nav-user-menu__link' ||\r\n        isDescendantByClassName(e.target, 'nav-user-menu__link')\r\n      ) {\r\n        toggleNavUserMenu(false);\r\n      }\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"nav-user\">\r\n      <button\r\n        className=\"nav__btn-pseudo nav__btn-pseudo--user\"\r\n        onClick={() => toggleNavUserMenu(!navUserMenu)}>\r\n        <img className=\"nav__avatar\" src={`${avatar}`} alt=\"avatar\" />\r\n        <span className=\"nav__username\">{user.name.split(' ')[0]}</span>\r\n        <svg className=\"nav__icon nav__icon--carret-down\">\r\n          <use xlinkHref={`${Sprite}#icon-arrow_drop_down`} />\r\n        </svg>\r\n      </button>\r\n      {navUserMenu ? (\r\n        <div className=\"nav-user-menu\">\r\n          <Link className=\"nav-user-menu__link\" to=\"/profile\">\r\n            <svg className=\"nav__icon  nav-user-menu__icon\">\r\n              <use xlinkHref={`${Sprite}#icon-user`} />\r\n            </svg>\r\n            <span className=\"nav-user-menu__text\">Profile</span>\r\n          </Link>\r\n          <Link className=\"nav-user-menu__link\" to=\"/logout\">\r\n            <svg className=\"nav__icon  nav-user-menu__icon\">\r\n              <use xlinkHref={`${Sprite}#icon-switch`} />\r\n            </svg>\r\n            <span className=\"nav-user-menu__text\">Logout</span>\r\n          </Link>\r\n        </div>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavUser;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport Sprite from 'assets/img/sprite.svg';\r\n\r\nimport NavNotifications from 'containers/NavNotifications';\r\nimport NavUser from './NavUser';\r\n\r\nexport default ({togglerInputRef, user}) => {\r\n  return (\r\n    <div className=\"nav__loggedIn\">\r\n      <Link\r\n        onClick={() => {\r\n          togglerInputRef.current.click();\r\n        }}\r\n        className=\"nav__loggedIn-btn\"\r\n        to=\"/record\">\r\n        <svg className=\"nav__icon nav__icon--record nav__icon--loggedIn\">\r\n          <use xlinkHref={`${Sprite}#icon-mic`} />\r\n        </svg>\r\n        <span className=\"nav__loggedIn-btn-text\">Record</span>\r\n      </Link>\r\n      <Link\r\n        onClick={() => {\r\n          togglerInputRef.current.click();\r\n        }}\r\n        className=\"nav__loggedIn-btn nav__loggedIn-btn--notifications\"\r\n        to=\"/notifications\">\r\n        <svg className=\"nav__icon nav__icon--loggedIn\">\r\n          <use xlinkHref={`${Sprite}#icon-bell`} />\r\n        </svg>\r\n        <span className=\"nav__loggedIn-btn-text\">Notifications</span>\r\n      </Link>\r\n      <Link\r\n        onClick={() => {\r\n          togglerInputRef.current.click();\r\n        }}\r\n        className=\"nav__loggedIn-btn nav__loggedIn-btn--notifications\"\r\n        to=\"/profile\">\r\n        <svg className=\"nav__icon nav__icon--loggedIn\">\r\n          <use xlinkHref={`${Sprite}#icon-user`} />\r\n        </svg>\r\n        <span className=\"nav__loggedIn-btn-text\">Profile</span>\r\n      </Link>\r\n      <Link\r\n        onClick={() => {\r\n          togglerInputRef.current.click();\r\n        }}\r\n        className=\"nav__loggedIn-btn nav__loggedIn-btn--notifications\"\r\n        to=\"/logout\">\r\n        <svg className=\"nav__icon nav__icon--loggedIn\">\r\n          <use xlinkHref={`${Sprite}#icon-switch`} />\r\n        </svg>\r\n        <span className=\"nav__loggedIn-btn-text\">Logout</span>\r\n      </Link>\r\n      <NavNotifications user={user} />\r\n      <NavUser user={user} />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {CurrentPathContext, UserContext} from 'context';\r\nimport NavItem from './NavItem';\r\nimport NavLoggedIn from './NavLoggedIn';\r\n\r\nimport LogoFull from 'assets/img/logo-full.png';\r\n\r\nimport './navigation.scss';\r\n\r\nconst togglerInputRef = React.createRef();\r\n\r\nfunction Navigation({location}) {\r\n  const {pathname} = location;\r\n  return (\r\n    <CurrentPathContext.Provider value={pathname}>\r\n      <div className=\"nav\">\r\n        <div className=\"nav-logo\">\r\n          <Link className=\"nav-logo__link\" to=\"/\">\r\n            <img className=\"nav-logo__img\" src={LogoFull} alt=\"logo\" />\r\n          </Link>\r\n        </div>\r\n        <input\r\n          className=\"nav__toggler-input\"\r\n          id=\"nav__toggler-input\"\r\n          name=\"nav__toggler-input\"\r\n          type=\"checkbox\"\r\n          ref={togglerInputRef}\r\n        />\r\n        <label className=\"nav__toggler\" htmlFor=\"nav__toggler-input\">\r\n          <span className=\"nav__toggler-cover\"></span>\r\n        </label>\r\n        <div className=\"nav__links\">\r\n          <ul className=\"nav__list\">\r\n            <NavItem\r\n              inputRef={togglerInputRef}\r\n              path=\"/\"\r\n              icon=\"home\"\r\n              text=\"Home\"\r\n            />\r\n            <NavItem\r\n              inputRef={togglerInputRef}\r\n              path=\"/auditorium\"\r\n              icon=\"music\"\r\n              text=\"Auditorium\"\r\n            />\r\n            <NavItem\r\n              inputRef={togglerInputRef}\r\n              path=\"/discussion\"\r\n              icon=\"bubbles\"\r\n              text=\"QnA\"\r\n            />\r\n          </ul>\r\n          <div className=\"nav__auth\">\r\n            <UserContext.Consumer>\r\n              {({isLoggedIn, user}) => {\r\n                if (isLoggedIn) {\r\n                  return (\r\n                    <NavLoggedIn\r\n                      togglerInputRef={togglerInputRef}\r\n                      user={user}\r\n                    />\r\n                  );\r\n                }\r\n                return (\r\n                  <React.Fragment>\r\n                    <Link\r\n                      onClick={() => {\r\n                        togglerInputRef.current.click();\r\n                      }}\r\n                      className=\"nav__btn nav__btn--signup\"\r\n                      to=\"/signup\">\r\n                      Signup\r\n                    </Link>\r\n                    <Link\r\n                      onClick={() => {\r\n                        togglerInputRef.current.click();\r\n                      }}\r\n                      className=\"nav__btn nav__btn--login\"\r\n                      to=\"/login\">\r\n                      Login\r\n                    </Link>\r\n                  </React.Fragment>\r\n                );\r\n              }}\r\n            </UserContext.Consumer>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </CurrentPathContext.Provider>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Home from 'components/Home';\r\nimport Signup from 'components/Signup';\r\nimport Login from 'components/Login';\r\nimport Logout from 'components/Logout';\r\nimport SetPassword from 'components/SetPassword';\r\nimport ResetPassword from 'components/ResetPassword';\r\nimport ForgotPassword from 'components/ForgotPassword';\r\nimport SentMail from 'components/SentMail';\r\nimport Auditorium from 'components/Auditorium';\r\n\r\nimport RateRecording from 'components/RateRecording';\r\n\r\nimport Profile from 'components/Profile';\r\nimport Record from 'components/Record';\r\n\r\nimport Navigation from 'components/Navigation';\r\n\r\nimport {UserContext} from 'context';\r\n\r\nconst App = ({isLoggedIn, user}) => {\r\n  return (\r\n    <UserContext.Provider value={{isLoggedIn, user}}>\r\n      <Router>\r\n        <Route component={Navigation} />\r\n        <div className=\"main\">\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Home} />\r\n            <Route path=\"/auditorium\" exact component={Auditorium} />\r\n            <Route path=\"/signup\" exact component={Signup} />\r\n            <Route path=\"/login\" exact component={Login} />\r\n            <Route path=\"/logout\" exact component={Logout} />\r\n            <Route path=\"/setPassword/:token\" exact component={SetPassword} />\r\n            <Route\r\n              path=\"/resetPassword/:token\"\r\n              exact\r\n              component={ResetPassword}\r\n            />\r\n            <Route path=\"/sentMail\" exact component={SentMail} />\r\n            <Route path=\"/profile\" exact component={Profile} />\r\n            <Route path=\"/record\" exact component={Record} />\r\n            <Route path=\"/forgotPassword\" exact component={ForgotPassword} />\r\n            <Route path=\"/rate\" exact component={RateRecording} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.auth.isLoggedIn,\r\n    user: state.auth.user,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import {LOG_IN, LOG_OUT} from 'actions/types';\r\n\r\nconst INITIAL_STATE = {\r\n  isLoggedIn: false,\r\n  user: null,\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case LOG_IN:\r\n      return {isLoggedIn: true, user: action.payload};\r\n    case LOG_OUT:\r\n      return {isLoggedIn: false, user: null};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {combineReducers} from 'redux';\r\nimport authReducer from './authReducer';\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, compose, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport App from './App';\r\nimport 'assets/scss/main.scss';\r\nimport reducers from 'reducers';\r\n\r\nfunction saveToLocalStorage(state) {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem('state', serializedState);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nfunction loadFromLocalStorage() {\r\n  try {\r\n    const serializedState = localStorage.getItem('state');\r\n    if (serializedState === null) return undefined;\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    console.log(err);\r\n    return undefined;\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst persistedState = loadFromLocalStorage();\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  persistedState,\r\n  composeEnhancers(applyMiddleware(thunk)),\r\n);\r\n\r\nstore.subscribe(() => {\r\n  saveToLocalStorage(store.getState());\r\n});\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/sprite.b4f6d964.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.6732bd42.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.08ee6099.png\";"],"sourceRoot":""}